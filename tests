import numpy as np
import unittest

class TestGaussElimination(unittest.TestCase):

    def test_distributed_zeros(self):
        A = np.matrix([[0, 2, 0],
                       [0, 0, 0],
                       [1, 0, 3]])
        result = gauss_elimination(A)
        expected_output = "Das Gleichungssystem hat keine eindeutige Lösung."
        self.assertEqual(result, expected_output)

    def test_letter_variables(self):
        A = np.matrix([['a', 2],
                       [1, 'b']])
        result = gauss_elimination(A)
        expected_output = "Die Koeffizientenmatrix enthält Buchstaben. Bitte überprüfen Sie die Eingabe."
        self.assertEqual(result, expected_output)

    def test_normal_case(self):
        A = np.matrix([[2, -1, 3],
                       [4, 2, 8],
                       [1, 3, 9]])
        result = gauss_elimination(A)
        expected_output = f"Die Lösung des Gleichungssystems ist x_1 = 3, x_2 = -1, x_3 = 1."
        self.assertEqual(result, expected_output)

    def test_linear_dependent_matrix(self):
        A = np.matrix([[1, 2, 3],
                       [2, 4, 6],
                       [3, 6, 9]])
        result = gauss_elimination(A)
        expected_output = "Die Gleichungen sind linear abhängig. Unendlich viele Lösungen existieren."
        self.assertEqual(result, expected_output)

if __name__ == '__main__':
    unittest.main()
